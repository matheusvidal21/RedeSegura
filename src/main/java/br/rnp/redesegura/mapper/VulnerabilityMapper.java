package br.rnp.redesegura.mapper;


import br.rnp.redesegura.dto.VulnerabilityDto;
import br.rnp.redesegura.dto.response.VulnerabilityResponse;
import br.rnp.redesegura.models.Service;
import br.rnp.redesegura.models.Server;
import br.rnp.redesegura.models.Vulnerability;
import br.rnp.redesegura.models.VulnerabilityType;
import br.rnp.redesegura.models.enums.Severity;
import br.rnp.redesegura.models.enums.VulnerabilityStatus;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

public class VulnerabilityMapper {

    private VulnerabilityMapper() {
    }

    public static VulnerabilityResponse toResponse(Vulnerability vulnerability) {
        return VulnerabilityResponse.builder()
                .id(vulnerability.getId())
                .title(vulnerability.getTitle())
                .severity(vulnerability.getSeverity().getValue())
                .status(vulnerability.getStatus().getValue())
                .serverName(vulnerability.getServer().getName())
                .vulnerabilityTypeName(vulnerability.getType().getName())
                .serviceName(vulnerability.getService().getName())
                .createdAt(vulnerability.getCreatedAt().format(DateTimeFormatter.ISO_LOCAL_DATE_TIME))
                .resolvedAt(vulnerability.getResolvedAt() != null ? vulnerability.getResolvedAt().format(DateTimeFormatter.ISO_LOCAL_DATE_TIME) : null)
                .build();
    }

    public static Vulnerability toEntity(VulnerabilityDto vulnerabilityDto, Server server, Service service, VulnerabilityType type) {
        return Vulnerability.builder()
                .title(vulnerabilityDto.getTitle())
                .severity(Severity.valueOf(vulnerabilityDto.getSeverity()))
                .status(VulnerabilityStatus.valueOf(vulnerabilityDto.getStatus()))
                .type(type)
                .createdAt(LocalDateTime.now())
                .server(server)
                .service(service)
                .build();
    }
}