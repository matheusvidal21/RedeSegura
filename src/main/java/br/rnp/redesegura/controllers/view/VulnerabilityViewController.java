package br.rnp.redesegura.controllers.view;

import br.rnp.redesegura.dto.VulnerabilityDto;
import br.rnp.redesegura.services.VulnerabilityService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

@Controller
@RequestMapping("/vulnerabilities")
public class VulnerabilityViewController {


    @Autowired
    private VulnerabilityService vulnerabilityService;

    @GetMapping
    public String list(Model model) {
        model.addAttribute("vulnerabilities", vulnerabilityService.findAll());
        return "vulnerability/list";
    }

    @GetMapping("/{id}")
    public String detail(@PathVariable("id") Long id, Model model) {
        model.addAttribute("vulnerability", vulnerabilityService.findById(id));
        return "vulnerability/detail";
    }

    @GetMapping("/create")
    public String createForm(Model model) {
        model.addAttribute("vulnerabilityDto", new VulnerabilityDto());
        return "vulnerability/create";
    }

    @PostMapping("/create")
    public String create(@ModelAttribute("vulnerabilityDto") VulnerabilityDto vulnerabilityDto) {
        vulnerabilityService.create(vulnerabilityDto);
        return "redirect:/vulnerabilities";
    }

    @GetMapping("/edit/{id}")
    public String editForm(@PathVariable("id") Long id, Model model) {
        model.addAttribute("vulnerabilityDto", vulnerabilityService.findById(id));
        return "vulnerability/edit";
    }

    @PostMapping("/edit/{id}")
    public String edit(@PathVariable("id") Long id, @ModelAttribute("vulnerabilityDto") VulnerabilityDto vulnerabilityDto) {
        vulnerabilityService.update(id, vulnerabilityDto);
        return "redirect:/vulnerabilities";
    }

    @PostMapping("/delete/{id}")
    public String delete(@PathVariable("id") Long id) {
        vulnerabilityService.delete(id);
        return "redirect:/vulnerabilities";
    }
}
