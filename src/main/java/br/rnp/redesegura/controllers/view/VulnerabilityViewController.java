package br.rnp.redesegura.controllers.view;

import br.rnp.redesegura.controllers.routes.Routes;
import br.rnp.redesegura.dto.InstitutionDto;
import br.rnp.redesegura.dto.VulnerabilityDto;
import br.rnp.redesegura.dto.response.InstitutionResponse;
import br.rnp.redesegura.dto.response.VulnerabilityResponse;
import br.rnp.redesegura.services.InstitutionService;
import br.rnp.redesegura.services.ServiceEntityService;
import br.rnp.redesegura.services.VulnerabilityService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@Controller
@RequestMapping(Routes.VULNERABILITIES_VIEW)
public class VulnerabilityViewController {

    @Autowired
    private VulnerabilityService vulnerabilityService;

    @Autowired
    private ServiceEntityService serviceEntityService;

    @GetMapping
    public String listVulnerabilities(Model model) {
        List<VulnerabilityResponse> vulnerabilities = vulnerabilityService.findAll();
        model.addAttribute("vulnerabilities", vulnerabilities);
        return "vulnerabilities/list";
    }

    @GetMapping("/create")
    public String showCreateForm(Model model) {
        model.addAttribute("vulnerability", new VulnerabilityDto());
        model.addAttribute("services", serviceEntityService.findAll());
        return "vulnerabilities/create";
    }

    @PostMapping("/create")
    public String createVulnerability(@ModelAttribute VulnerabilityDto vulnerabilityDto) {
        vulnerabilityService.create(vulnerabilityDto);
        return "redirect:/vulnerabilities";
    }

    @GetMapping("/edit/{id}")
    public String showEditForm(@PathVariable Long id, Model model) {
        VulnerabilityResponse vulnerability = vulnerabilityService.findById(id);
        model.addAttribute("vulnerability", vulnerability);
        model.addAttribute("services", serviceEntityService.findAll());
        return "vulnerabilities/edit";
    }

    @PostMapping("/edit/{id}")
    public String updateVulnerability(@PathVariable Long id, @ModelAttribute VulnerabilityDto vulnerabilityDto) {
        vulnerabilityService.update(id, vulnerabilityDto);
        return "redirect:/vulnerabilities";
    }

    @GetMapping("/delete/{id}")
    public String deleteVulnerability(@PathVariable Long id) {
        vulnerabilityService.delete(id);
        return "redirect:/vulnerabilities";
    }
}