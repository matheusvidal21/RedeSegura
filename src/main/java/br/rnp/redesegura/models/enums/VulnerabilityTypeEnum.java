package br.rnp.redesegura.models.enums;


import java.util.Arrays;

public enum VulnerabilityTypeEnum {
    DNS_RECURSION("DNS Recursion", "Vulnerabilidade DDoS através da recursão DNS."),
    NTP_DDOS_AMPLIFICATION("NTP DDOS Amplification", "Vulnerabilidade de amplificação de DDOS no NTP."),
    NETBIOS_EXPOSURE("NetBIOS Exposure", "Exposição da vulnerabilidade no NetBIOS."),
    SNMP_PUBLIC_COMMUNITY("SNMP Public Community", "Exposição da comunidade SNMP 'public'."),
    SAMBA_OUTDATED_VERSION("Samba Outdated Version", "Versão desatualizada do Samba vulnerável a ataques."),
    EXPOSED_MYSQL("Exposed MySQL", "Exposição do MySQL a ataques."),
    REDIS_NO_AUTHENTICATION("Redis No Authentication", "Redis exposto sem exigir autenticação."),
    EXPOSED_SSDP("Exposed SSDP", "SSDP exposto indevidamente."),
    EXPOSED_MEMCACHED("Exposed Memcached", "Memcached exposto na internet."),
    EXPOSED_SLP("Exposed SLP", "SLP exposto de forma vulnerável.");

    private final String name;
    private final String description;

    VulnerabilityTypeEnum(String name, String description) {
        this.name = name;
        this.description = description;
    }

    public String getName() {
        return name;
    }

    public String getDescription() {
        return description;
    }

    public static VulnerabilityTypeEnum fromName(String name) {
        return Arrays.stream(VulnerabilityTypeEnum.values())
                .filter(v -> v.getName().equalsIgnoreCase(name))
                .findFirst()
                .orElseThrow(() -> new IllegalArgumentException("Invalid vulnerability type name: " + name));
    }
}