package br.rnp.redesegura.strategy;

import br.rnp.redesegura.dto.response.VulnerabilityTestResponse;
import br.rnp.redesegura.models.Protocol;
import br.rnp.redesegura.models.Vulnerability;

import java.time.LocalDateTime;
import java.util.Set;
import java.util.stream.Collectors;

public interface VulnerabilityTestStrategy {

    VulnerabilityTestResponse test(Vulnerability vulnerability);

    default VulnerabilityTestResponse createResponse(Vulnerability vulnerability) {
        Set<String> protocols = vulnerability.getService().getProtocols() != null ?
                vulnerability.getService().getProtocols().stream().map(Protocol::getName).collect(Collectors.toSet()) :
                null;

        return VulnerabilityTestResponse.builder()
                .vulnerabilityId(vulnerability.getId() != null ? vulnerability.getId() : null)
                .vulnerabilityTitle(vulnerability.getTitle() != null ? vulnerability.getTitle() : null)
                .service(vulnerability.getService().getName() != null ? vulnerability.getService().getName() : null)
                .ip(vulnerability.getService().getIp())
                .port(vulnerability.getService().getPort())
                .protocols(protocols)
                .typeTest(vulnerability.getType().getName())
                .testedAt(LocalDateTime.now().toString())
                .build();
    }

}
