package br.rnp.redesegura.repositories;

import br.rnp.redesegura.models.Vulnerability;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

@Repository
public interface VulnerabilityRepository extends JpaRepository<Vulnerability, Long> {

    @Query("SELECT COUNT(v) FROM Vulnerability v WHERE v.status = 'RESOLVED'")
    int countResolvedVulnerabilities();

    @Query("SELECT COUNT(v) FROM Vulnerability v WHERE v.status = 'NOT_RESOLVED'")
    int countNotResolvedVulnerabilities();

    @Query("SELECT COUNT(v) FROM Vulnerability v WHERE v.status = 'OPEN'")
    int countOpenVulnerabilities();

    @Query("SELECT COUNT(v) FROM Vulnerability v WHERE v.severity = 'HIGH'")
    int countHighSeverityVulnerabilities();

    @Query("SELECT COUNT(v) FROM Vulnerability v WHERE v.server.institution.id = :institutionId")
    int countVulnerabilitiesByInstitution(@Param("institutionId") Long institutionId);

    @Query("SELECT COUNT(v) FROM Vulnerability v WHERE v.server.institution.id = :institutionId AND v.status = 'RESOLVED'")
    int countResolvedVulnerabilitiesByInstitution(@Param("institutionId") Long institutionId);

    @Query("SELECT COUNT(v) FROM Vulnerability v WHERE v.server.institution.id = :institutionId AND v.status = 'NOT_RESOLVED'")
    int countNotResolvedVulnerabilitiesByInstitution(@Param("institutionId") Long institutionId);

    @Query("SELECT COUNT(v) FROM Vulnerability v WHERE v.server.institution.id = :institutionId AND v.status = 'OPEN'")
    int countOpenVulnerabilitiesByInstitution(@Param("institutionId") Long institutionId);

    @Query("SELECT COUNT(v) FROM Vulnerability v WHERE v.server.institution.id = :institutionId AND v.severity = 'HIGH'")
    int countHighSeverityVulnerabilitiesByInstitution(@Param("institutionId") Long institutionId);

    @Query("SELECT COUNT(v) FROM Vulnerability v WHERE v.type.name = :typeName")
    int countVulnerabilitiesByType(@Param("typeName") String typeName);

    @Query("SELECT COUNT(v) FROM Vulnerability v WHERE v.type.name = :typeName AND v.status = 'RESOLVED'")
    int countResolvedVulnerabilitiesByType(@Param("typeName") String typeName);

    @Query("SELECT COUNT(v) FROM Vulnerability v WHERE v.type.name = :typeName AND v.status = 'NOT_RESOLVED'")
    int countNotResolvedVulnerabilitiesByType(@Param("typeName") String typeName);

}
